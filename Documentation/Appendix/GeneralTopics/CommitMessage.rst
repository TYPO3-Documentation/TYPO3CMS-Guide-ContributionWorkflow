.. include:: ../../Includes.txt

.. _commitmessage:

==================
The commit message
==================

Since we strive to automate a lot of things the commit message plays an important role in order to be able to automate.
Here is an example of a final commit message. The change-id will be generated by the commit-hook. Do not set the change-id on your first commit!

.. code-block:: none

   [BUGFIX] Save parents localized uid as child reference

   This patch resolves problems with updating translated records which
   have a relation to a parent object. The backend expects the localized
   uid as parent id but extbase currently saves the original uid. This
   leads to wrong relation information within the child record.

   Resolves: #69630
   Releases: master, 6.2
   Change-Id: Ib0af8b5fa13c03e15c4db5cb0ac1a81c8ee568eb

You can see that a commit message consists mainly of five parts, let's go over them step by step:

Summary line
   A summary line starts with a **keyword** and a **brief summary** of what the change does. Make sure to describe how the behavior
   is **now**, not how it used to be - in the end, telling someone what was broken doesn't help anyone, you want to tell
   what is working now :)

   Here is a list of the allowed keywords:

   * [BUGFIX]
   * [FEATURE]
   * [TASK]
   * [DOCS]

.. sidebar:: Imperative mood and other great rules

      https://chris.beams.io/posts/git-commit/#seven-rules is an excellent guide about how to write good subject lines.
   
   It is *very important* that the message is written in **imperative mood**; that means that it must be written as if you are giving a command or an instruction.
   If in doubt, the *golden rule* to follow is very simple: Review your subject lines, and apply the following words in front of it:
   ``if applied, this commit will **"your subject line here"**``

   For example (you will find some more example later):

   ``If applied, this commit will **Invalid session token on creating content element in admin panel**``
   Does not make any sense.

   ``If applied, this commit will **"Fix backend edit URL in admin panel"**``
   Reads nicely and explains what happened

   After the keyword, make sure to start the summary with a capital letter.

   Avoid using ``EXT:somesystemextension`` in the commit subject: looks ugly and is redundant when you look at what code changed.

   Whenever your change introduces a breaking change, it is **mandatory** to put **!!!** in front of the keyword.

   Optionally you can prefix the keyword with **[WIP]** indicating that the review is in a "Work-In-Progress" state and
   should not be merged.

   So say you want to add a breaking feature which is still work in progress, you would use ``!!![WIP][FEATURE] Transform Lead to Gold``
   as your summary line.

   In case of reverting a previous commit, the formula should be ``[TASK] Revert "[KEYWORD] Title of commit"``, for example, in case of reverting a feature you would use: ``[TASK] Revert "[FEATURE] Transform Lead to Gold"``

Description
   Here you can go into detail about the how and why of the change. It should be brief, but yet descriptive so people reviewing
   your change get an idea what they need to look out for

Resolves
   You need to reference an issue on Forge_ here simply by adding #[ISSUE_NUMBER]. If your issue resolves `multiple` issues
   at once (yay!), make sure to add more lines, do not separate them by comma or alike.

Reverts
   See Lifecycle of a patch :ref:`lifeOfAPatch-Reverting-Patches`.

Related
   Other issues related to this change which are not resolved. You need to
   reference an issue on Forge_ by just adding the issue number like in
   'Related: #00000'.
   If your change is related to multiple issues use multiple 'Related' lines.
   Each line can only have one issue number.

Releases
   This is a comma separated list of the target versions you intend to apply this fix on. In general, we **always** fix
   things on **master** first and then backport a change if it goes along with our support rules for older versions.

   Always make sure the target version does indeed exist, when in doubt, as in the coredev channel on Slack_.

Change-Id
   This is a unique value used by Gerrit_ to identify a change. This is being generated by :ref:`our pre-commit hook<git-setup-precommithook>`.


Bad examples vs. good examples
==============================

Please note that the following examples are taken from *real commits*.

**Example 1**

.. code-block:: none
   
   [FOLLOWUP][BUGFIX] Remove uglify of jquery-ui/sortable.js

should have been:

.. code-block:: none
   
   [BUGFIX] Remove uglify of jquery-ui/sortable.js


**Example 2**

.. code-block:: none
   
   [BUGFIX] EXT:filelist Canceling the file exists already modal works now

should have been:

.. code-block:: none
   
   [BUGFIX] Allow canceling modal that appears when file exists 


**Example 3**

.. code-block:: none

   Revert "[FEATURE] EXT:form - introduce YAML "imports""

should have been:

.. code-block:: none
   
   [TASK] Revert "[FEATURE] introduce YAML "imports""

.. note::   

   Please note that in this case the subject of the commit to revert was poorly written,too! This required some additional adjusting. 
 

 **Example 4**

 .. code-block:: none

   [TASK] Revert "Add support for PSR-15 HTTP middlewares"

should have been:

.. code-block:: none

   [TASK] Revert "[FEATURE] Add support for PSR-15 HTTP middlewares"


**Example 5**

.. code-block:: none

   [TASK] use horizontal ellipsis instead of 3 dots

should have been:

.. code-block:: none

   [TASK] Use horizontal ellipsis instead of 3 dots


**Example 6**

.. code-block:: none
   
   [BUGFIX] Element Browser should only render default language pages

should have been: 

.. code-block:: none

   [BUGFIX] Limit element browser to only render default language pages


**Example 7**

.. code-block:: none

   [BUGFIX] D3.js uses basic authentication credentials cached in browser

should have been: 

.. code-block:: none

   [BUGFIX] Use only basic authentication credentials cached in browser in D3.js


**Example 8**

.. code-block:: none

   [DOCS] 1/1 9.1 Documentation

should have been:
 
.. code-block:: none

   [DOCS] Add documentation for version 9.1 (1/1)


**Example 9**

.. code-block:: none  

   [FEATURE] Option to globally enable redirect hit count

should have been:
 
.. code-block:: none

   [FEATURE] Add option to globally enable redirect hit count


**Example 10**

.. code-block:: none 

   [TASK] Improved extension configuration API

should have been:  

.. code-block:: none 

   [TASK] Improve extension configuration API


**Example 11**

.. code-block:: none    

   [BUGFIX] NewContentElementWizardController to NewContentElementController

should have been:

.. code-block:: none    

   [BUGFIX] Remove recently introduced NewContentElementWizardController


**Example 12**

.. code-block:: none 

   [BUGFIX] Invalid session token on creating content element in admin panel

Should have been: 

.. code-block:: none 

   [BUGFIX] Fix backend edit URL in admin panel
